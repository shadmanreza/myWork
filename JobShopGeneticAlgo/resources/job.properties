#######################################################################
#################### Algorithm related information ####################
#######################################################################
# Fixed input arguments (Mandatory)
# Total number of jobs (valid range: 0 < numOfJobs <= Integer.MAXVALUE)
num_of_jobs=3

# Total number of machines (valid range: 0 < numOfMachines <= Integer.MAXVALUE)
num_of_machines=3

# Total population size (valid range: 0 < populationSize <= Integer.MAXVALUE)
population_size=30

# Best pool Size
best_pool_size=5

# Crossover limit
crossover_size=10

# Mutation limit
mutaiton_size=5

# Variable input arguments (Any number of jobs can be added)
# Job details Valid syntax:
# job<job_index>.num_of_operation=<Integer>
# job<job_index>.operation_list="{[machine_index,processing_time];[machine_index,processing_time],...}"
# job1
job1=[1,4];[2,3];[3,3]

# job2
job2=[1,1];[3,5];[2,3]

# job3
job3=[2,2];[1,4];[3,1]